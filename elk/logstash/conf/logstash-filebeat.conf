input {
    # 来源beats
    beats {
        # 端口
        port => "5044"
    }
}
input {
	stdin {}
	# jdbc {
	# 	type => "jdbc"
	# 	 # 数据库连接地址
	# 	jdbc_connection_string => "jdbc:mysql://106.14.19.68:8066/amoy?characterEncoding=UTF-8&autoReconnect=true""
	# 	 # 数据库连接账号密码；
	# 	jdbc_user => "root"
	# 	jdbc_password => "amoy123"
	# 	 # MySQL依赖包路径；
	# 	jdbc_driver_library => "mysql/mysql-connector-java-8.0.21.jar"
	# 	 # the name of the driver class for mysql
	# 	jdbc_driver_class => "com.mysql.jdbc.Driver"
	# 	 # 数据库重连尝试次数
	# 	connection_retry_attempts => "3"
	# 	 # 判断数据库连接是否可用，默认false不开启
	# 	jdbc_validate_connection => "true"
	# 	 # 数据库连接可用校验超时时间，默认3600S
	# 	jdbc_validation_timeout => "3600"
	# 	 # 开启分页查询（默认false不开启）；
	# 	jdbc_paging_enabled => "true"
	# 	 # 单次分页查询条数（默认100000,若字段较多且更新频率较高，建议调低此值）；
	# 	jdbc_page_size => "500"
	# 	 # statement为查询数据sql，如果sql较复杂，建议配通过statement_filepath配置sql文件的存放路径；
	# 	 # sql_last_value为内置的变量，存放上次查询结果中最后一条数据tracking_column的值，此处即为ModifyTime；
	# 	 # statement_filepath => "mysql/jdbc.sql"
	# 	statement => "SELECT KeyId,TradeTime,OrderUserName,ModifyTime FROM `DetailTab` WHERE ModifyTime>= :sql_last_value order by ModifyTime asc"
	# 	 # 是否将字段名转换为小写，默认true（如果有数据序列化、反序列化需求，建议改为false）；
	# 	lowercase_column_names => false
	# 	 # Value can be any of: fatal,error,warn,info,debug，默认info；
	# 	sql_log_level => warn
	# 	 # 是否记录上次执行结果，true表示会将上次执行结果的tracking_column字段的值保存到last_run_metadata_path指定的文件中；
	# 	record_last_run => true
	# 	 # 需要记录查询结果某字段的值时，此字段为true，否则默认tracking_column为timestamp的值；
	# 	use_column_value => true
	# 	 # 需要记录的字段，用于增量同步，需是数据库字段
	# 	tracking_column => "ModifyTime"
	# 	 # Value can be any of: numeric,timestamp，Default value is "numeric"
	# 	tracking_column_type => timestamp
	# 	 # record_last_run上次数据存放位置；
	# 	last_run_metadata_path => "mysql/last_id.txt"
	# 	 # 是否清除last_run_metadata_path的记录，需要增量同步时此字段必须为false；
	# 	clean_run => false
	# 	 # 同步频率(分 时 天 月 年)，默认每分钟同步一次；
	# 	schedule => "* * * * *"
	# }
}
# 分析、过滤插件，可以多个
filter {
    if [fieldtype] == "log_nginx" {
        urldecode {
            field => "message"
        }
        json{
            source => "message"
        }
        mutate{
            split => ["user_req", " "]
            add_field => {
                "url" => "%{[user_req][1]}"
            }
        }
	mutate{
	    split => ["url", "?"]
            add_field => {
                "api" => "%{[url][0]}"
            }
	}
	if[methods]=="GET" and [api]=="/topics"
        {
            mutate{
                split=>["query","="]
                add_field => {
                    "query_param0_name" => "%{[query][0]}"
                }
                add_field => {
                    "query_param0_content" => "%{[query][1]}"
                }    
            }
        }
    }
    if [fieldtype] == "log_backend" {
        grok{
            match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{JAVALOGMESSAGE:msg}" }
        }

        date {
            match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss,S", "ISO8601" ]
        }
    }
    else{
        grok {
            match => { "message" => "%{COMBINEDAPACHELOG}"}   
        }
        geoip {
            source => "clientip"
        }
  }
}
output {
    # 选择elasticsearch
    if [fieldtype] == "log_backend" {
        elasticsearch {
            hosts => ["http://106.14.19.68:9200", "http://106.14.19.68:9201", "http://106.14.19.68:9202"]    
            index => "%{[@metadata][beat]}-%{[@metadata][version]}-backend-%{+YYYY.MM.dd}"
            user => elastic
            password => VpEszoE3peaL7RazXQAO   
        }
    } else if [fieldtype] == "log_mysql_master" {
        elasticsearch {
            hosts => ["http://106.14.19.68:9200", "http://106.14.19.68:9201", "http://106.14.19.68:9202"]    
            index => "%{[@metadata][beat]}-%{[@metadata][version]}-mysql-master-%{+YYYY.MM.dd}"
            user => elastic
            password => VpEszoE3peaL7RazXQAO
        }
    } else if [fieldtype] == "log_mysql_slave" {
        elasticsearch {
            hosts => ["http://106.14.19.68:9200", "http://106.14.19.68:9201", "http://106.14.19.68:9202"]    
            index => "%{[@metadata][beat]}-%{[@metadata][version]}-mysql-slave-%{+YYYY.MM.dd}"
            user => elastic
            password => VpEszoE3peaL7RazXQAO
        }
    } else if [fieldtype] == "log_mycat" {
        elasticsearch {
            hosts => ["http://106.14.19.68:9200", "http://106.14.19.68:9201", "http://106.14.19.68:9202"]    
            index => "%{[@metadata][beat]}-%{[@metadata][version]}-mycat-%{+YYYY.MM.dd}"
            user => elastic
            password => VpEszoE3peaL7RazXQAO
        }
    } else if [fieldtype] == "log_redis" {
        elasticsearch {
            hosts => ["http://106.14.19.68:9200", "http://106.14.19.68:9201", "http://106.14.19.68:9202"]    
            index => "%{[@metadata][beat]}-%{[@metadata][version]}-redis-%{+YYYY.MM.dd}"
            user => elastic
            password => VpEszoE3peaL7RazXQAO
        }
    }  else if [fieldtype] == "log_nginx" {
        elasticsearch {
            hosts => ["http://106.14.19.68:9200", "http://106.14.19.68:9201", "http://106.14.19.68:9202"]    
            index => "%{[@metadata][beat]}-%{[@metadata][version]}-nginx-%{+YYYY.MM.dd}"
            user => elastic
            password => VpEszoE3peaL7RazXQAO
        }
    }  else if [fieldtype] == "log_recommend" {
        elasticsearch {
            hosts => ["http://106.14.19.68:9200", "http://106.14.19.68:9201", "http://106.14.19.68:9202"]    
            index => "%{[@metadata][beat]}-%{[@metadata][version]}-recommend-%{+YYYY.MM.dd}"
            user => elastic
            password => VpEszoE3peaL7RazXQAO
        }
    }
}
